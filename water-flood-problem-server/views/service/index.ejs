<!DOCTYPE html> 
<html>
  <head>
    <meta name="viewport" content="initial-scale=1.0, user-scalable=no">
    
    <meta charset="utf-8">
    <title>Water mapping - Hack Bulgaria</title>
    <meta http-equiv="X-UA-Compatible" content="IE=11" />
    <style>
      html, body, #map-canvas {
        height: 100%;
        margin: 0px;
        padding: 0px
      }
    </style>
    <!--<script src="https://maps.googleapis.com/maps/api/js?v=3.exp&sensor=true"></script>-->
    <script type="text/javascript"
       src="https://maps.googleapis.com/maps/api/js?libraries=visualization&sensor=true" >
     
      // true_or_false
    </script>
  
  <!--script src="https://maps.googleapis.com/maps/api/js?v=3.exp&signed_in=true&libraries=places"></script-->
    
    <script type="text/javascript"
      src="https://code.jquery.com/jquery-2.1.3.min.js">
    </script>


    <script type = "text/javascript">
  var markers = [];
  var heatmapdata = [];
  var dates = [];
  var heatmap;
  var ip = "";
  var result = [];
  var controlText;
  var infowindows = [];

  var GET_ALL_DATES_URL = 'http://localhost:1337/service/getAllDates';
  var GET_ALL_MEASUREMENTS_URL = 'http://localhost:1337/service/getLatestMeasurements';
  
  function geolocator (map) {
       
   if(navigator.geolocation) {
    navigator.geolocation.getCurrentPosition(function(position) {
      var pos = new google.maps.LatLng(position.coords.latitude,
                                       position.coords.longitude);

      var infowindow = new google.maps.InfoWindow({
        map: map,
        position: pos,
        content: 'This is your location.'
      });

      map.setCenter(pos);
    }, function() {
      handleNoGeolocation(true,map);
    });
  } else {
    // Browser doesn't support Geolocation
    handleNoGeolocation(false,map);
  }
  }


function handleNoGeolocation(errorFlag,map) {
  if (errorFlag) {
    var content = 'Error: The Geolocation service failed.';
  } else {
    var content = 'Error: Your browser doesn\'t support geolocation.';
  }

 var options = {
    map: map,
    position: new google.maps.LatLng(80, 105),
    content: content
  };

  var infowindow = new google.maps.InfoWindow(options);
  map.setCenter(options.position);
}
var map;
function initialize() {
  var mapOptions = {
    zoom: 10,
    //center: new google.maps.LatLng(34.0522300 , -118.2436800), // center maps
    mapTypeId: google.maps.MapTypeId.ROADMAP //HYBRID
  };
  map = new google.maps.Map(document.getElementById('map-canvas'), mapOptions);
  
  /////
  
  geolocator(map);

}

function SlideBarControl(slideBarControl, map, minMax) {
  slideBarControl.type = 'range';
  slideBarControl.min = 0;
  slideBarControl.value = 0;
  slideBarControl.max = minMax.length-1;
  



  // Set CSS for the control border
  var controlUI = document.createElement('div');
  controlUI.style.backgroundColor = '#fff';
  controlUI.style.border = '2px solid #fff';
  controlUI.style.borderRadius = '3px';
  controlUI.style.boxShadow = '0 2px 6px rgba(0,0,0,.3)';
  controlUI.style.cursor = 'pointer';
  controlUI.style.marginBottom = '22px';
  controlUI.style.textAlign = 'center';
  controlUI.title = 'Click to recenter the map';
  slideBarControl.appendChild(controlUI);





  // Set CSS for the control interior
  // var controlText = document.createElement('div');
  // controlText.id = 'slider';
  // controlText.style.color = 'rgb(25,25,25)';
  // controlText.style.fontFamily = 'Roboto,Arial,sans-serif';
  // controlText.style.fontSize = '16px';
  // controlText.style.lineHeight = '38px';
  // controlText.style.paddingLeft = '5px';
  // controlText.style.paddingRight = '5px';
  // controlText.innerHTML = 'Center Map';
  // controlUI.appendChild(controlText);





  /// --- comment was up to here

  google.maps.event.addDomListener(slideBarControl, 'input', function() {
    setHeatmap(map, heatmap, heatmapdata[slideBarControl.value]);
    var d = dates[slideBarControl.value].split('/');
    controlText.innerHTML = d[0] + "." + d[1] + "." + d[2];
  });

}

function clearMarkers() {
  for (var i = 0; i < markers.length; i++) {
    markers[i].setMap(null);
  }
}
function fillMap(result, map, dates)
{

    // console.log('dates', dates);
    // console.log('result', result);
  for(var j =0;j<dates.length;j++)
  {

    var arr = result.filter(function(elementFromServer){
      var dateInElement = elementFromServer[0];
      var currentDate = dates[j];
      return dateInElement === currentDate;
    });

  var heat = [];
    for (var i=0; i<arr.length; i++) {
            
          if(j==0) // set marker only for the first date returned by the server
          {

                // lat and long from server
                // arr[i] - represents measurement from i-th date 
                var point = new google.maps.LatLng(parseFloat(arr[i][2]),parseFloat(arr[i][3]));
                //var title = parts[0];
                
                var marker = new google.maps.Marker({
                  position: point
                  //title: location
                });
                marker.setMap(map);
                markers.push(marker);
                var content = '<h2>' + arr[i][4] + '</h2><br />' + arr[i][5]; // title -4, next text 5
                var infowindow = new google.maps.InfoWindow({
                  content: content,
                         // position: location,
                });
                // console.log(content);
                infowindows[i] = infowindow;
                google.maps.event.addListener(marker, 'click', function(event) {
                  // infowindow is the last one
                  
                  // console.log(event);
                  // console.log(event.latLng);
                  infowindow.open(map,marker);

                });
                



                // google.maps.event.addListener(map, 'click', function(event) {
                //   placeMarker(event.latLng);
                //   });

                // function placeMarker(location) {
                //   var marker = new google.maps.Marker({
                //     position: location,
                //     map: map,
                //   });
                //   var infowindow = new google.maps.InfoWindow({
                //     content: 'Latitude: ' + location.lat() +
                //     '<br>Longitude: ' + location.lng()
                //   });
                //   infowindow.open(map,marker);
                // }




            
          }
          //console.log(j + "-"+i);
          heat[i] = {
                location: new google.maps.LatLng(arr[i][2], arr[i][3]),
                weight: arr[i][1]///50
          };
          if(i==arr.length-1)
          {
                //map.setCenter(point);
                map.setZoom(13);
          } 

    }
    heatmapdata[j]=heat;
     //console.log(heatmapdata[j]);
  }
    //alert(heatmapdata);
}
function setHeatmap(map, heatmap, _heatmapdata)
{
    //heatmap.setMap(null);
    heatmap.setData(_heatmapdata);
    //heatmap.setMap(map);
}
// TODO remove this function
function TextControl(controlDiv, map) {

  // Set CSS for the control border
  var controlUI = document.createElement('div');
  controlUI.style.backgroundColor = '#fff';
  controlUI.style.border = '2px solid #fff';
  controlUI.style.borderRadius = '3px';
  controlUI.style.boxShadow = '0 2px 6px rgba(0,0,0,.3)';
  //controlUI.style.cursor = 'pointer';
  controlUI.style.marginBottom = '22px';
  controlUI.style.textAlign = 'center';
  //controlUI.title = 'Click to recenter the map';
  controlDiv.appendChild(controlUI);

  // Set CSS for the control interior
  controlText = document.createElement('div');
  controlText.id = 'slider';
  controlText.style.color = 'rgb(25,25,25)';
  controlText.style.fontFamily = 'Roboto,Arial,sans-serif';
  controlText.style.fontSize = '12px';
  controlText.style.lineHeight = '38px';
  controlText.style.paddingLeft = '5px';
  controlText.style.paddingRight = '5px';
  //controlText.innerHTML = 'Center Map';
  controlUI.appendChild(controlText);
}


google.maps.event.addDomListener(window, 'load', initialize);


    </script>

  <button onclick = "setPins()" style="position:absolute; z-index:1;right: 30px; top: 100px; width: 100px; height: 100px;" >
    <img src="pins2.png" />
    view pins on map
  </button>
  
  <button predict = "setSlideBar()" style="position:absolute; z-index:1;right: 30px; top: 240px; width: 100px; height: 100px;" >
    <img src="predict.jpg" />
    predict
  </button>

  <script>
    function setPins() {
    console.log("pins")
    $.ajax({
        url : GET_ALL_DATES_URL,
        type : 'get',
        //dataType : 'json',//or json
    //data: 
        //timeout : 5000,
        //cache : false,
        //async : true,
        success : function(data) { 
            dates = data;       
          console.log(data);
            /*dates =  [
                  // requested date                         real date of measurement
                    ["4/4/15"],  
                    ["5/4/15"] 
                  ];*/
            
        
            // TODO : colors
           var gradient = [

    'rgba(255, 0, 0, 0)',
    'rgba(255, 0, 0, 0.3)',
    'rgba(255, 5, 0, 0.3)',
    'rgba(255, 165, 0, 0.2)',
    'rgba(255, 185, 15, 0.2)',
    'rgba(0, 105, 255, 0.7)',
    'rgba(0, 0, 255, 1)' 

            ];
            heatmap = new google.maps.visualization.HeatmapLayer({
                gradient: gradient,
          
                radius: 80,
                maxIntensity: 100
                //dissipating: false
              });
        
              
              var slideBarControl = document.createElement('input');
            
              // var slideBar = new SlideBarControl(slideBarControl, map, dates);
              new SlideBarControl(slideBarControl, map, dates);

              slideBarControl.index = 1;
              map.controls[google.maps.ControlPosition.BOTTOM_CENTER].push(slideBarControl);
            
              var textControlDiv = document.createElement('div');
              var textControl = new TextControl(textControlDiv, map);
            
              textControlDiv.index = 2;
              map.controls[google.maps.ControlPosition.BOTTOM_CENTER].push(textControlDiv);
              
              $.ajax({
                  url : GET_ALL_MEASUREMENTS_URL + "?date=2015/03/23" ,
                  type : 'get',
                  dataType : 'json',//or json
              data: dates,
                  //timeout : 5000,
                  //cache : false,
                  //async : true,
                  success : function(data) { 
                          result = data; 
                           console.log('res from server', result);


                            /*
                            result =  [
                                // requested date                         real date of measurement
                                  ["4/4/15" , 100, 42.5047926,  27.4626361, "4/4/15", "nqkva danna 29"],  
                                  ["5/4/15" , 100, 42.5047926,  27.4626361, "4/4/15", "nqkva danna 30"] 
                                ];*/
                          
                          
                          /// --- comment was from here
                          fillMap(result, map, dates);
                          var d = dates[0].split('/'); // dates[0][0]
                          controlText.innerHTML = d[0] + "." + d[1] + "." + d[2];
                          
                          setHeatmap(map,heatmap, heatmapdata[0]);
                          heatmap.setMap(map);
                          //clearMarkers();

                  },
                  error : function(msg, cause) {
                      console.log(msg);
                  }
              });
    
 
        },
        error : function(msg, cause) {
           console.log(msg);
        }
    });
  
    }
  </script>

  </head>
  <body>
    <div id="map-canvas"></div>
  </body>
</html>